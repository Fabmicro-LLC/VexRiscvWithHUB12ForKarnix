	.file	"raw.c"
	.option nopic
	.attribute arch, "rv32i2p0"
	.attribute unaligned_access, 0
	.attribute stack_align, 16
	.text
	.align	2
	.globl	raw_input
	.type	raw_input, @function
raw_input:
	addi	sp,sp,-48
	sw	s1,36(sp)
	lui	s1,%hi(ip_data)
	addi	a5,s1,%lo(ip_data)
	sw	s0,40(sp)
	sw	s2,32(sp)
	sw	s3,28(sp)
	sw	s4,24(sp)
	sw	s5,20(sp)
	sw	s6,16(sp)
	sw	s7,12(sp)
	sw	ra,44(sp)
	mv	s4,a0
	lw	a1,0(a5)
	lw	a0,20(a5)
	li	s3,0
	addi	s1,s1,%lo(ip_data)
	call	ip4_addr_isbroadcast_u32
	lw	a5,4(s4)
	mv	s6,a0
	lui	s7,%hi(ip_data+16)
	lbu	s5,9(a5)
	lui	a5,%hi(raw_pcbs)
	lw	s0,%lo(raw_pcbs)(a5)
	li	a0,0
	mv	s2,a5
.L2:
	beq	s0,zero,.L1
	lbu	a5,20(s0)
	bne	a5,s5,.L3
	lbu	a4,8(s0)
	beq	a4,zero,.L4
	lw	a5,4(s1)
	lbu	a5,56(a5)
	addi	a5,a5,1
	andi	a5,a5,0xff
	bne	a4,a5,.L3
.L4:
	beq	s6,zero,.L5
	lbu	a5,9(s0)
	andi	a5,a5,32
	beq	a5,zero,.L3
	lw	a5,0(s0)
	bne	a5,zero,.L3
.L6:
	lbu	a5,21(s0)
	andi	a5,a5,1
	beq	a5,zero,.L7
	lw	a4,4(s0)
	lw	a5,16(s1)
	bne	a4,a5,.L3
.L7:
	lw	a5,24(s0)
	beq	a5,zero,.L3
	lw	a0,28(s0)
	addi	a3,s7,%lo(ip_data+16)
	mv	a2,s4
	mv	a1,s0
	jalr	a5
	beq	a0,zero,.L10
	li	a0,1
	beq	s3,zero,.L1
	lw	a5,16(s0)
	sw	a5,16(s3)
	lw	a5,%lo(raw_pcbs)(s2)
	sw	s0,%lo(raw_pcbs)(s2)
	sw	a5,16(s0)
.L1:
	lw	ra,44(sp)
	lw	s0,40(sp)
	lw	s1,36(sp)
	lw	s2,32(sp)
	lw	s3,28(sp)
	lw	s4,24(sp)
	lw	s5,20(sp)
	lw	s6,16(sp)
	lw	s7,12(sp)
	addi	sp,sp,48
	jr	ra
.L5:
	lw	a5,0(s0)
	beq	a5,zero,.L6
	lw	a4,20(s1)
	beq	a5,a4,.L6
.L3:
	mv	s3,s0
	lw	s0,16(s0)
	j	.L2
.L10:
	li	a0,2
	j	.L3
	.size	raw_input, .-raw_input
	.align	2
	.globl	raw_bind
	.type	raw_bind, @function
raw_bind:
	li	a5,-6
	beq	a0,zero,.L31
	beq	a1,zero,.L31
	lw	a5,0(a1)
	sw	a5,0(a0)
	li	a5,0
.L31:
	mv	a0,a5
	ret
	.size	raw_bind, .-raw_bind
	.align	2
	.globl	raw_bind_netif
	.type	raw_bind_netif, @function
raw_bind_netif:
	li	a5,0
	beq	a1,zero,.L36
	lbu	a5,56(a1)
	addi	a5,a5,1
	andi	a5,a5,0xff
.L36:
	sb	a5,8(a0)
	ret
	.size	raw_bind_netif, .-raw_bind_netif
	.align	2
	.globl	raw_connect
	.type	raw_connect, @function
raw_connect:
	mv	a5,a0
	li	a0,-6
	beq	a5,zero,.L38
	beq	a1,zero,.L38
	lw	a4,0(a1)
	li	a0,0
	sw	a4,4(a5)
	lbu	a4,21(a5)
	ori	a4,a4,1
	sb	a4,21(a5)
	ret
.L38:
	ret
	.size	raw_connect, .-raw_connect
	.align	2
	.globl	raw_disconnect
	.type	raw_disconnect, @function
raw_disconnect:
	lbu	a5,21(a0)
	sw	zero,4(a0)
	sb	zero,8(a0)
	andi	a5,a5,-2
	sb	a5,21(a0)
	ret
	.size	raw_disconnect, .-raw_disconnect
	.align	2
	.globl	raw_recv
	.type	raw_recv, @function
raw_recv:
	sw	a1,24(a0)
	sw	a2,28(a0)
	ret
	.size	raw_recv, .-raw_recv
	.align	2
	.globl	raw_sendto_if_src
	.type	raw_sendto_if_src, @function
raw_sendto_if_src:
	addi	sp,sp,-32
	sw	ra,28(sp)
	sw	s0,24(sp)
	sw	s1,20(sp)
	sw	s2,16(sp)
	sw	s3,12(sp)
	sw	s4,8(sp)
	sw	s5,4(sp)
	bne	a0,zero,.L45
.L73:
	li	s1,-6
	j	.L44
.L45:
	beq	a2,zero,.L73
	beq	a3,zero,.L73
	beq	a4,zero,.L73
	lbu	a5,21(a0)
	mv	s4,a4
	mv	s2,a3
	andi	a5,a5,2
	mv	s5,a2
	mv	s0,a1
	mv	s1,a0
	beq	a5,zero,.L48
	lhu	a4,10(a1)
	li	a5,19
	bleu	a4,a5,.L73
	addi	s1,a0,12
	sw	s1,60(a3)
	mv	a6,a3
	li	a5,0
	li	a4,0
	li	a3,0
	li	a2,0
	mv	a1,s4
	mv	a0,s0
	call	ip4_output_if
	mv	s1,a0
	sw	zero,60(s2)
.L44:
	lw	ra,28(sp)
	lw	s0,24(sp)
	mv	a0,s1
	lw	s2,16(sp)
	lw	s1,20(sp)
	lw	s3,12(sp)
	lw	s4,8(sp)
	lw	s5,4(sp)
	addi	sp,sp,32
	jr	ra
.L48:
	lhu	a4,8(a1)
	li	a5,65536
	addi	a5,a5,-21
	bleu	a4,a5,.L49
.L51:
	li	s1,-1
	j	.L44
.L49:
	li	a1,20
	mv	a0,s0
	call	pbuf_add_header
	beq	a0,zero,.L50
	li	a2,640
	li	a1,0
	li	a0,36
	call	pbuf_alloc
	mv	s3,a0
	beq	a0,zero,.L51
	lhu	a5,8(s0)
	beq	a5,zero,.L52
	mv	a1,s0
	call	pbuf_chain
.L52:
	lbu	a5,9(s1)
	andi	a5,a5,32
	bne	a5,zero,.L53
	lw	a0,0(s5)
	mv	a1,s2
	call	ip4_addr_isbroadcast_u32
	beq	a0,zero,.L53
	beq	s0,s3,.L73
	mv	a0,s3
	call	pbuf_free
	j	.L73
.L50:
	li	a1,20
	mv	a0,s0
	call	pbuf_remove_header
	bne	a0,zero,.L51
	mv	s3,s0
	j	.L52
.L53:
	addi	a5,s1,12
	lbu	a3,11(s1)
	sw	a5,60(s2)
	lbu	a5,20(s1)
	lbu	a4,10(s1)
	mv	a6,s2
	mv	a2,s5
	mv	a1,s4
	mv	a0,s3
	call	ip4_output_if
	sw	zero,60(s2)
	mv	s1,a0
	beq	s0,s3,.L44
	mv	a0,s3
	call	pbuf_free
	j	.L44
	.size	raw_sendto_if_src, .-raw_sendto_if_src
	.align	2
	.globl	raw_sendto
	.type	raw_sendto, @function
raw_sendto:
	beq	a0,zero,.L81
	beq	a2,zero,.L81
	addi	sp,sp,-16
	sw	s0,8(sp)
	sw	s1,4(sp)
	sw	s2,0(sp)
	sw	ra,12(sp)
	mv	s0,a0
	lbu	a0,8(a0)
	mv	s1,a2
	mv	s2,a1
	beq	a0,zero,.L76
	call	netif_get_by_index
.L77:
	beq	a0,zero,.L82
	lw	a5,0(s0)
	beq	a5,zero,.L78
	andi	a5,a5,240
	li	a4,224
	beq	a5,a4,.L78
	mv	a4,s0
.L79:
	mv	a3,a0
	mv	a0,s0
	lw	s0,8(sp)
	lw	ra,12(sp)
	mv	a2,s1
	mv	a1,s2
	lw	s1,4(sp)
	lw	s2,0(sp)
	addi	sp,sp,16
	tail	raw_sendto_if_src
.L76:
	mv	a0,a2
	call	ip4_route
	j	.L77
.L78:
	addi	a4,a0,4
	j	.L79
.L81:
	li	a0,-6
	ret
.L82:
	lw	ra,12(sp)
	lw	s0,8(sp)
	lw	s1,4(sp)
	lw	s2,0(sp)
	li	a0,-4
	addi	sp,sp,16
	jr	ra
	.size	raw_sendto, .-raw_sendto
	.align	2
	.globl	raw_send
	.type	raw_send, @function
raw_send:
	addi	a2,a0,4
	tail	raw_sendto
	.size	raw_send, .-raw_send
	.align	2
	.globl	raw_remove
	.type	raw_remove, @function
raw_remove:
	lui	a4,%hi(raw_pcbs)
	lw	a5,%lo(raw_pcbs)(a4)
	mv	a1,a0
	bne	a5,a0,.L92
	lw	a5,16(a0)
	sw	a5,%lo(raw_pcbs)(a4)
.L93:
	li	a0,0
	tail	memp_free
.L95:
	mv	a5,a4
.L92:
	beq	a5,zero,.L93
	lw	a4,16(a5)
	beq	a4,zero,.L93
	bne	a4,a1,.L95
	lw	a4,16(a1)
	sw	a4,16(a5)
	j	.L93
	.size	raw_remove, .-raw_remove
	.align	2
	.globl	raw_new
	.type	raw_new, @function
raw_new:
	addi	sp,sp,-16
	lui	a1,%hi(.LC0)
	sw	s1,4(sp)
	li	a2,602
	mv	s1,a0
	addi	a1,a1,%lo(.LC0)
	li	a0,0
	sw	s0,8(sp)
	sw	ra,12(sp)
	call	memp_malloc_fn
	mv	s0,a0
	beq	a0,zero,.L100
	li	a2,32
	li	a1,0
	call	memset
	li	a5,-1
	sb	a5,11(s0)
	lui	a5,%hi(raw_pcbs)
	lw	a4,%lo(raw_pcbs)(a5)
	sb	s1,20(s0)
	sw	s0,%lo(raw_pcbs)(a5)
	sw	a4,16(s0)
.L100:
	mv	a0,s0
	lw	ra,12(sp)
	lw	s0,8(sp)
	lw	s1,4(sp)
	addi	sp,sp,16
	jr	ra
	.size	raw_new, .-raw_new
	.align	2
	.globl	raw_new_ip_type
	.type	raw_new_ip_type, @function
raw_new_ip_type:
	mv	a0,a1
	tail	raw_new
	.size	raw_new_ip_type, .-raw_new_ip_type
	.align	2
	.globl	raw_netif_ip_addr_changed
	.type	raw_netif_ip_addr_changed, @function
raw_netif_ip_addr_changed:
	beq	a0,zero,.L107
	lw	a5,0(a0)
	beq	a5,zero,.L107
	beq	a1,zero,.L107
	lw	a5,0(a1)
	beq	a5,zero,.L107
	lui	a5,%hi(raw_pcbs)
	lw	a5,%lo(raw_pcbs)(a5)
.L110:
	bne	a5,zero,.L112
.L107:
	ret
.L112:
	lw	a3,0(a5)
	lw	a4,0(a0)
	bne	a3,a4,.L111
	lw	a4,0(a1)
	sw	a4,0(a5)
.L111:
	lw	a5,16(a5)
	j	.L110
	.size	raw_netif_ip_addr_changed, .-raw_netif_ip_addr_changed
	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	2
.LC0:
	.string	"src/lwip/core/raw.c"
	.section	.sbss,"aw",@nobits
	.align	2
	.type	raw_pcbs, @object
	.size	raw_pcbs, 4
raw_pcbs:
	.zero	4
	.ident	"GCC: (SiFive GCC 8.3.0-2019.08.0) 8.3.0"
