	.file	"inet_chksum.c"
	.option nopic
	.attribute arch, "rv32i2p0"
	.attribute unaligned_access, 0
	.attribute stack_align, 16
	.text
	.align	2
	.globl	lwip_standard_chksum
	.type	lwip_standard_chksum, @function
lwip_standard_chksum:
	addi	sp,sp,-16
	sh	zero,14(sp)
	andi	a3,a0,1
	beq	a3,zero,.L2
	ble	a1,zero,.L2
	lbu	a5,0(a0)
	addi	a1,a1,-1
	addi	a0,a0,1
	sb	a5,15(sp)
.L2:
	li	a5,0
	li	a4,1
.L3:
	bgt	a1,a4,.L4
	bne	a1,a4,.L5
	lbu	a4,0(a0)
	sb	a4,14(sp)
.L5:
	lhu	a0,14(sp)
	li	a4,65536
	addi	a4,a4,-1
	add	a0,a0,a5
	srli	a5,a0,16
	and	a0,a0,a4
	add	a5,a5,a0
	srli	a0,a5,16
	and	a5,a5,a4
	add	a0,a0,a5
	beq	a3,zero,.L6
	slli	a5,a0,8
	srli	a0,a0,8
	and	a4,a5,a4
	andi	a0,a0,255
	or	a0,a4,a0
.L6:
	slli	a0,a0,16
	srli	a0,a0,16
	addi	sp,sp,16
	jr	ra
.L4:
	addi	a0,a0,2
	lhu	a2,-2(a0)
	addi	a1,a1,-2
	add	a5,a5,a2
	j	.L3
	.size	lwip_standard_chksum, .-lwip_standard_chksum
	.align	2
	.globl	inet_chksum_pseudo
	.type	inet_chksum_pseudo, @function
inet_chksum_pseudo:
	addi	sp,sp,-32
	sw	s0,24(sp)
	sw	s1,20(sp)
	sw	s2,16(sp)
	sw	s3,12(sp)
	sw	s4,8(sp)
	sw	s5,4(sp)
	sw	ra,28(sp)
	lw	a4,0(a4)
	lw	a3,0(a3)
	li	a5,65536
	addi	a5,a5,-1
	and	s0,a4,a5
	srli	a4,a4,16
	add	s0,s0,a4
	and	a4,a3,a5
	add	s0,s0,a4
	srli	a3,a3,16
	add	a3,a3,s0
	srli	s0,a3,16
	and	a3,a3,a5
	add	a3,s0,a3
	srli	s0,a3,16
	and	a3,a3,a5
	mv	s3,a0
	mv	s4,a1
	mv	s2,a2
	add	s0,s0,a3
	li	s5,0
	mv	s1,a5
.L15:
	bne	s3,zero,.L17
	beq	s5,zero,.L18
	li	a4,65536
	slli	a5,s0,8
	addi	a4,a4,-1
	srli	s0,s0,8
	and	a5,a5,a4
	andi	s0,s0,255
	or	s0,a5,s0
.L18:
	mv	a0,s4
	call	lwip_htons
	mv	s1,a0
	mv	a0,s2
	call	lwip_htons
	add	a0,s1,a0
	li	a5,65536
	add	s0,a0,s0
	addi	a5,a5,-1
	srli	a0,s0,16
	and	s0,s0,a5
	add	s0,a0,s0
	srli	a0,s0,16
	and	s0,s0,a5
	add	s0,a0,s0
	not	a0,s0
	lw	ra,28(sp)
	lw	s0,24(sp)
	slli	a0,a0,16
	lw	s1,20(sp)
	lw	s2,16(sp)
	lw	s3,12(sp)
	lw	s4,8(sp)
	lw	s5,4(sp)
	srli	a0,a0,16
	addi	sp,sp,32
	jr	ra
.L17:
	lhu	a1,10(s3)
	lw	a0,4(s3)
	call	lwip_standard_chksum
	add	s0,a0,s0
	srli	a5,s0,16
	and	s0,s0,s1
	add	s0,a5,s0
	lhu	a5,10(s3)
	andi	a5,a5,1
	beq	a5,zero,.L16
	slli	a5,s0,8
	srli	s0,s0,8
	and	a5,a5,s1
	andi	s0,s0,255
	xori	s5,s5,1
	or	s0,a5,s0
.L16:
	lw	s3,0(s3)
	j	.L15
	.size	inet_chksum_pseudo, .-inet_chksum_pseudo
	.align	2
	.globl	ip_chksum_pseudo
	.type	ip_chksum_pseudo, @function
ip_chksum_pseudo:
	tail	inet_chksum_pseudo
	.size	ip_chksum_pseudo, .-ip_chksum_pseudo
	.align	2
	.globl	inet_chksum_pseudo_partial
	.type	inet_chksum_pseudo_partial, @function
inet_chksum_pseudo_partial:
	addi	sp,sp,-48
	sw	s0,40(sp)
	sw	s1,36(sp)
	sw	s2,32(sp)
	sw	s4,24(sp)
	sw	s5,20(sp)
	sw	s6,16(sp)
	sw	ra,44(sp)
	sw	s3,28(sp)
	mv	s2,a2
	lw	a2,0(a5)
	lw	a4,0(a4)
	li	a5,65536
	addi	a5,a5,-1
	and	s0,a2,a5
	srli	a2,a2,16
	add	s0,s0,a2
	and	a2,a4,a5
	add	s0,s0,a2
	srli	a4,a4,16
	add	a4,a4,s0
	srli	s0,a4,16
	and	a4,a4,a5
	add	a4,s0,a4
	srli	s0,a4,16
	and	a4,a4,a5
	mv	s4,a0
	mv	s5,a1
	add	s0,s0,a4
	li	s6,0
	mv	s1,a5
.L28:
	bne	s4,zero,.L31
.L35:
	bne	s6,zero,.L32
.L33:
	mv	a0,s5
	call	lwip_htons
	mv	s1,a0
	mv	a0,s2
	call	lwip_htons
	add	a0,s1,a0
	li	a5,65536
	add	s0,a0,s0
	addi	a5,a5,-1
	srli	a0,s0,16
	and	s0,s0,a5
	add	s0,a0,s0
	srli	a0,s0,16
	and	s0,s0,a5
	add	s0,a0,s0
	not	a0,s0
	lw	ra,44(sp)
	lw	s0,40(sp)
	slli	a0,a0,16
	lw	s1,36(sp)
	lw	s2,32(sp)
	lw	s3,28(sp)
	lw	s4,24(sp)
	lw	s5,20(sp)
	lw	s6,16(sp)
	srli	a0,a0,16
	addi	sp,sp,48
	jr	ra
.L31:
	beq	a3,zero,.L35
	lhu	a5,10(s4)
	mv	s3,a5
	bleu	a5,a3,.L29
	mv	s3,a3
.L29:
	slli	s3,s3,16
	lw	a0,4(s4)
	srli	s3,s3,16
	mv	a1,s3
	sw	a3,12(sp)
	call	lwip_standard_chksum
	add	s0,a0,s0
	srli	a5,s0,16
	lw	a3,12(sp)
	and	s0,s0,s1
	add	s0,a5,s0
	lhu	a5,10(s4)
	sub	s3,a3,s3
	slli	a3,s3,16
	andi	a5,a5,1
	srli	a3,a3,16
	beq	a5,zero,.L30
	slli	a5,s0,8
	srli	s0,s0,8
	and	a5,a5,s1
	andi	s0,s0,255
	xori	s6,s6,1
	or	s0,a5,s0
.L30:
	lw	s4,0(s4)
	j	.L28
.L32:
	li	a4,65536
	slli	a5,s0,8
	addi	a4,a4,-1
	srli	s0,s0,8
	and	a5,a5,a4
	andi	s0,s0,255
	or	s0,a5,s0
	j	.L33
	.size	inet_chksum_pseudo_partial, .-inet_chksum_pseudo_partial
	.align	2
	.globl	ip_chksum_pseudo_partial
	.type	ip_chksum_pseudo_partial, @function
ip_chksum_pseudo_partial:
	tail	inet_chksum_pseudo_partial
	.size	ip_chksum_pseudo_partial, .-ip_chksum_pseudo_partial
	.align	2
	.globl	inet_chksum
	.type	inet_chksum, @function
inet_chksum:
	addi	sp,sp,-16
	sw	ra,12(sp)
	call	lwip_standard_chksum
	lw	ra,12(sp)
	not	a0,a0
	slli	a0,a0,16
	srli	a0,a0,16
	addi	sp,sp,16
	jr	ra
	.size	inet_chksum, .-inet_chksum
	.align	2
	.globl	inet_chksum_pbuf
	.type	inet_chksum_pbuf, @function
inet_chksum_pbuf:
	addi	sp,sp,-32
	sw	s2,16(sp)
	li	s2,65536
	sw	s0,24(sp)
	sw	s1,20(sp)
	sw	s3,12(sp)
	sw	ra,28(sp)
	mv	s1,a0
	li	s3,0
	li	s0,0
	addi	s2,s2,-1
.L44:
	bne	s1,zero,.L46
	beq	s3,zero,.L47
	li	a4,65536
	slli	a5,s0,8
	addi	a4,a4,-1
	srli	s0,s0,8
	and	a5,a5,a4
	andi	s0,s0,255
	or	s0,a5,s0
.L47:
	not	a0,s0
	lw	ra,28(sp)
	lw	s0,24(sp)
	slli	a0,a0,16
	lw	s1,20(sp)
	lw	s2,16(sp)
	lw	s3,12(sp)
	srli	a0,a0,16
	addi	sp,sp,32
	jr	ra
.L46:
	lhu	a1,10(s1)
	lw	a0,4(s1)
	call	lwip_standard_chksum
	add	s0,a0,s0
	srli	a5,s0,16
	and	s0,s0,s2
	add	s0,a5,s0
	lhu	a5,10(s1)
	andi	a5,a5,1
	beq	a5,zero,.L45
	slli	a5,s0,8
	srli	s0,s0,8
	and	a5,a5,s2
	andi	s0,s0,255
	xori	s3,s3,1
	or	s0,a5,s0
.L45:
	lw	s1,0(s1)
	j	.L44
	.size	inet_chksum_pbuf, .-inet_chksum_pbuf
	.ident	"GCC: (SiFive GCC 8.3.0-2019.08.0) 8.3.0"
