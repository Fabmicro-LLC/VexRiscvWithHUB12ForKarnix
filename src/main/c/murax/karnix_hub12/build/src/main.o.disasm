	.file	"main.c"
	.option nopic
	.attribute arch, "rv32i2p0"
	.attribute unaligned_access, 0
	.attribute stack_align, 16
	.text
 #APP
	.set regnum_x0  ,  0
	.set regnum_x1  ,  1
	.set regnum_x2  ,  2
	.set regnum_x3  ,  3
	.set regnum_x4  ,  4
	.set regnum_x5  ,  5
	.set regnum_x6  ,  6
	.set regnum_x7  ,  7
	.set regnum_x8  ,  8
	.set regnum_x9  ,  9
	.set regnum_x10 , 10
	.set regnum_x11 , 11
	.set regnum_x12 , 12
	.set regnum_x13 , 13
	.set regnum_x14 , 14
	.set regnum_x15 , 15
	.set regnum_x16 , 16
	.set regnum_x17 , 17
	.set regnum_x18 , 18
	.set regnum_x19 , 19
	.set regnum_x20 , 20
	.set regnum_x21 , 21
	.set regnum_x22 , 22
	.set regnum_x23 , 23
	.set regnum_x24 , 24
	.set regnum_x25 , 25
	.set regnum_x26 , 26
	.set regnum_x27 , 27
	.set regnum_x28 , 28
	.set regnum_x29 , 29
	.set regnum_x30 , 30
	.set regnum_x31 , 31
	.set regnum_zero,  0
	.set regnum_ra  ,  1
	.set regnum_sp  ,  2
	.set regnum_gp  ,  3
	.set regnum_tp  ,  4
	.set regnum_t0  ,  5
	.set regnum_t1  ,  6
	.set regnum_t2  ,  7
	.set regnum_s0  ,  8
	.set regnum_s1  ,  9
	.set regnum_a0  , 10
	.set regnum_a1  , 11
	.set regnum_a2  , 12
	.set regnum_a3  , 13
	.set regnum_a4  , 14
	.set regnum_a5  , 15
	.set regnum_a6  , 16
	.set regnum_a7  , 17
	.set regnum_s2  , 18
	.set regnum_s3  , 19
	.set regnum_s4  , 20
	.set regnum_s5  , 21
	.set regnum_s6  , 22
	.set regnum_s7  , 23
	.set regnum_s8  , 24
	.set regnum_s9  , 25
	.set regnum_s10 , 26
	.set regnum_s11 , 27
	.set regnum_t3  , 28
	.set regnum_t4  , 29
	.set regnum_t5  , 30
	.set regnum_t6  , 31
	.set CUSTOM0  , 0x0B
	.set CUSTOM1  , 0x2B
 #NO_APP
	.align	2
	.globl	println
	.type	println, @function
println:
	addi	sp,sp,-16
	sw	ra,12(sp)
	call	print_uart0
	lw	ra,12(sp)
	lui	a0,%hi(.LC0)
	addi	a0,a0,%lo(.LC0)
	addi	sp,sp,16
	tail	print_uart0
	.size	println, .-println
	.align	2
	.globl	to_hex_nibble
	.type	to_hex_nibble, @function
to_hex_nibble:
	andi	a0,a0,15
	li	a5,9
	bleu	a0,a5,.L4
	addi	a0,a0,55
	ret
.L4:
	addi	a0,a0,48
	ret
	.size	to_hex_nibble, .-to_hex_nibble
	.align	2
	.globl	to_hex
	.type	to_hex, @function
to_hex:
	addi	sp,sp,-48
	sw	s0,40(sp)
	sw	s1,36(sp)
	sw	s2,32(sp)
	sw	s3,28(sp)
	sw	ra,44(sp)
	mv	s2,a0
	mv	s1,a0
	li	s0,28
	li	s3,-4
.L7:
	srl	a0,a1,s0
	andi	a0,a0,0xff
	sw	a1,12(sp)
	call	to_hex_nibble
	sb	a0,0(s1)
	addi	s0,s0,-4
	addi	s1,s1,1
	lw	a1,12(sp)
	bne	s0,s3,.L7
	lw	ra,44(sp)
	lw	s0,40(sp)
	sb	zero,8(s2)
	lw	s1,36(sp)
	lw	s2,32(sp)
	lw	s3,28(sp)
	addi	sp,sp,48
	jr	ra
	.size	to_hex, .-to_hex
	.align	2
	.globl	process_and_wait
	.type	process_and_wait, @function
process_and_wait:
	addi	sp,sp,-32
	sw	s0,24(sp)
	sw	s1,20(sp)
	sw	s4,8(sp)
	sw	s5,4(sp)
	sw	ra,28(sp)
	sw	s2,16(sp)
	sw	s3,12(sp)
	li	a5,-267714560
	lw	s2,0(a5)
	lw	s3,4(a5)
	mv	s4,a0
	li	s5,-267714560
	lui	s1,%hi(events_modbus_rtu_poll)
	lui	s0,%hi(events_mac_poll)
.L14:
	lw	a5,0(s5)
	lw	a6,4(s5)
	sub	a3,a5,s2
	sgtu	a4,a3,a5
	sub	a5,a6,s3
	bne	a5,a4,.L10
	bleu	s4,a3,.L10
	lw	a5,%lo(events_modbus_rtu_poll)(s1)
	beq	a5,zero,.L13
	call	modbus_rtu_poll
	sw	zero,%lo(events_modbus_rtu_poll)(s1)
.L13:
	lw	a5,%lo(events_mac_poll)(s0)
	beq	a5,zero,.L14
	call	mac_poll
	sw	zero,%lo(events_mac_poll)(s0)
	j	.L14
.L10:
	lw	ra,28(sp)
	lw	s0,24(sp)
	lw	s1,20(sp)
	lw	s2,16(sp)
	lw	s3,12(sp)
	lw	s4,8(sp)
	lw	s5,4(sp)
	addi	sp,sp,32
	jr	ra
	.size	process_and_wait, .-process_and_wait
	.align	2
	.globl	sram_test_write_shorts
	.type	sram_test_write_shorts, @function
sram_test_write_shorts:
	lui	a0,%hi(.LC1)
	addi	sp,sp,-32
	li	a1,-1879048192
	li	a2,524288
	addi	a0,a0,%lo(.LC1)
	sw	ra,28(sp)
	sw	s0,24(sp)
	sw	s1,20(sp)
	sw	s2,16(sp)
	sw	s3,12(sp)
	sw	s4,8(sp)
	sw	s5,4(sp)
	call	printf
	li	a5,0
	li	a1,-1879048192
	li	a3,262144
.L24:
	slli	a4,a5,1
	slli	a2,a5,16
	add	a4,a4,a1
	srli	a2,a2,16
	sh	a2,0(a4)
	addi	a5,a5,1
	bne	a5,a3,.L24
	lui	s1,%hi(.LC2)
	addi	a0,s1,%lo(.LC2)
	call	printf
	lui	a0,%hi(.LC3)
	li	a2,524288
	li	a1,-1879048192
	addi	a0,a0,%lo(.LC3)
	li	s2,65536
	call	printf
	li	s0,0
	li	s4,-1879048192
	addi	s2,s2,-1
	lui	s5,%hi(.LC4)
	li	s3,262144
.L26:
	slli	a1,s0,1
	add	a1,a1,s4
	lhu	a5,0(a1)
	slli	a4,s0,16
	srli	a4,a4,16
	beq	a4,a5,.L25
	lhu	a3,0(a1)
	and	a2,s0,s2
	addi	a0,s5,%lo(.LC4)
	call	printf
.L25:
	addi	s0,s0,1
	bne	s0,s3,.L26
	lw	s0,24(sp)
	lw	ra,28(sp)
	lw	s2,16(sp)
	lw	s3,12(sp)
	lw	s4,8(sp)
	lw	s5,4(sp)
	addi	a0,s1,%lo(.LC2)
	lw	s1,20(sp)
	addi	sp,sp,32
	tail	printf
	.size	sram_test_write_shorts, .-sram_test_write_shorts
	.section	.text.startup,"ax",@progbits
	.align	2
	.globl	main
	.type	main, @function
main:
	addi	sp,sp,-336
	sw	ra,332(sp)
	sw	s0,328(sp)
	sw	s1,324(sp)
	sw	s2,320(sp)
	sw	s3,316(sp)
	sw	s4,312(sp)
	sw	s5,308(sp)
	sw	s6,304(sp)
	sw	s7,300(sp)
	sw	s8,296(sp)
 #APP
# 143 "src/main.c" 1
	csrc mstatus, 8
# 0 "" 2
 #NO_APP
	call	init_sbrk
	lui	a4,%hi(deadbeef)
	lw	a5,%lo(deadbeef)(a4)
	beq	a5,zero,.L31
	lui	a0,%hi(.LC5)
	addi	a0,a0,%lo(.LC5)
	call	print_uart0
	call	hard_reboot
.L32:
	lui	a5,%hi(sbrk_heap_end)
	lw	a1,%lo(sbrk_heap_end)(a5)
	addi	a0,sp,32
	lui	s0,%hi(.LC0)
	call	to_hex
	lui	a0,%hi(.LC6)
	addi	a0,a0,%lo(.LC6)
	call	print_uart0
	addi	a0,sp,32
	call	print_uart0
	addi	a0,s0,%lo(.LC0)
	call	print_uart0
	lui	a0,%hi(.LC7)
	li	a1,67
	addi	a0,a0,%lo(.LC7)
	call	printf
	li	s1,-268435456
	lw	a5,4(s1)
	lui	a0,%hi(.LC8)
	addi	a0,a0,%lo(.LC8)
	ori	a5,a5,2
	sw	a5,4(s1)
	call	printf
	li	a5,-268091392
	sw	zero,0(a5)
	lw	a5,4(s1)
	li	a4,63
	li	a2,25
	andi	a5,a5,-9
	sw	a5,4(s1)
	li	a5,-268042240
	sw	a4,12(a5)
	sw	zero,4(a5)
	li	a4,-1
	sw	a4,0(a5)
	li	a4,-268369920
	lw	a5,4(a4)
	li	a3,1
	li	a0,-267845632
	ori	a5,a5,2
	sw	a5,4(a4)
	li	a4,-268365824
	lw	a5,4(a4)
	ori	a5,a5,2
	sw	a5,4(a4)
	li	a5,-268304384
	sw	zero,0(a5)
	sw	a2,4(a5)
	sw	zero,8(a5)
	li	a4,98304
	sw	zero,12(a5)
	addi	a4,a4,1696
	sw	a4,16(a5)
	sw	a3,0(a5)
	li	a5,-268300288
	sw	zero,0(a5)
	sw	a2,4(a5)
	sw	zero,8(a5)
	li	a4,49152
	sw	zero,12(a5)
	addi	a4,a4,848
	sw	a4,16(a5)
	sw	a3,0(a5)
	call	i2c_init
 #APP
# 233 "src/main.c" 1
	csrs mstatus, 8
# 0 "" 2
 #NO_APP
	lui	s5,%hi(uart_config_reset_counter)
	li	s2,499712
	li	s1,10
	li	s7,2
	mv	s3,s5
	li	s8,-268435456
	li	s4,-268369920
	li	s6,46
	addi	s2,s2,288
.L35:
	lw	a5,%lo(uart_config_reset_counter)(s5)
	bgtu	a5,s7,.L33
	lw	a5,0(s8)
	bge	a5,zero,.L33
.L34:
	lw	a5,4(s4)
	srli	a5,a5,16
	andi	a5,a5,255
	beq	a5,zero,.L34
	sw	s6,0(s4)
	mv	a0,s2
	addi	s1,s1,-1
	call	delay_us
	bne	s1,zero,.L35
.L33:
	addi	a0,s0,%lo(.LC0)
	call	printf
	lui	s0,%hi(active_config)
	lui	s1,%hi(default_config)
	li	a2,32
	addi	a1,s1,%lo(default_config)
	addi	a0,s0,%lo(active_config)
	call	memcpy
	lw	a4,%lo(uart_config_reset_counter)(s3)
	li	a5,2
	bleu	a4,a5,.L36
	lui	a1,%hi(.LC9)
	sw	zero,%lo(uart_config_reset_counter)(s3)
	addi	a1,a1,%lo(.LC9)
.L50:
	lui	a0,%hi(.LC10)
	addi	a0,a0,%lo(.LC10)
	call	printf
	j	.L37
.L31:
	li	a5,-559038464
	addi	a5,a5,-273
	sw	a5,%lo(deadbeef)(a4)
	j	.L32
.L36:
	li	a5,-268435456
	lw	a5,0(a5)
	blt	a5,zero,.L38
	lui	a1,%hi(.LC11)
	addi	a1,a1,%lo(.LC11)
	j	.L50
.L38:
	li	a0,-267845632
	call	eeprom_probe
	bne	a0,zero,.L39
	addi	a0,s0,%lo(active_config)
	call	config_load
	bne	a0,zero,.L40
	lui	a0,%hi(.LC12)
	addi	a0,a0,%lo(.LC12)
	call	printf
.L37:
 #APP
# 269 "src/main.c" 1
	csrc mstatus, 8
# 0 "" 2
 #NO_APP
	addi	s0,s0,%lo(active_config)
	lbu	a0,19(s0)
	call	hub_init
	call	mac_lwip_init
	call	modbus_udp_init
	call	modbus_rtu_init
	lui	a0,%hi(.LC15)
	addi	a0,a0,%lo(.LC15)
	call	printf
	li	a4,-268435456
	lw	a5,4(a4)
	andi	a5,a5,-8
	sw	a5,4(a4)
 #APP
# 289 "src/main.c" 1
	csrs mstatus, 8
# 0 "" 2
 #NO_APP
	lui	s1,%hi(font_6x8)
	lui	a3,%hi(.LC16)
	addi	a5,s1,%lo(font_6x8)
	li	a7,8
	li	a6,6
	li	a4,5
	addi	a3,a3,%lo(.LC16)
	li	a2,63
	li	a1,0
	li	a0,6
	call	hub_print
	lbu	a2,20(s0)
	lui	a1,%hi(.LC17)
	addi	a1,a1,%lo(.LC17)
	mv	a0,sp
	call	sprintf
	addi	a5,s1,%lo(font_6x8)
	mv	a4,a0
	li	a7,8
	li	a6,6
	mv	a3,sp
	li	a2,63
	li	a1,8
	li	a0,0
	call	hub_print
	li	s2,1998848
	addi	a0,s2,1152
	call	process_and_wait
	lui	a3,%hi(.LC18)
	addi	a5,s1,%lo(font_6x8)
	li	a7,8
	li	a6,6
	li	a4,5
	addi	a3,a3,%lo(.LC18)
	li	a2,63
	li	a1,0
	li	a0,6
	lui	s0,%hi(default_netif)
	call	hub_print
	addi	s0,s0,%lo(default_netif)
	lbu	a2,4(s0)
	lui	s3,%hi(.LC19)
	addi	a1,s3,%lo(.LC19)
	mv	a0,sp
	call	sprintf
	addi	a5,s1,%lo(font_6x8)
	mv	a4,a0
	li	a7,8
	li	a6,6
	mv	a3,sp
	li	a2,63
	li	a1,8
	li	a0,0
	call	hub_print
	addi	a0,s2,1152
	call	process_and_wait
	lbu	a2,5(s0)
	addi	a1,s3,%lo(.LC19)
	mv	a0,sp
	call	sprintf
	addi	a5,s1,%lo(font_6x8)
	mv	a4,a0
	li	a7,8
	li	a6,6
	mv	a3,sp
	li	a2,63
	li	a1,8
	li	a0,0
	call	hub_print
	addi	a0,s2,1152
	call	process_and_wait
	lbu	a2,6(s0)
	addi	a1,s3,%lo(.LC19)
	mv	a0,sp
	call	sprintf
	addi	a5,s1,%lo(font_6x8)
	mv	a4,a0
	li	a7,8
	li	a6,6
	mv	a3,sp
	li	a2,63
	li	a1,8
	li	a0,0
	call	hub_print
	addi	a0,s2,1152
	call	process_and_wait
	lbu	a2,7(s0)
	addi	a1,s3,%lo(.LC19)
	mv	a0,sp
	call	sprintf
	addi	a5,s1,%lo(font_6x8)
	mv	a4,a0
	li	a7,8
	li	a6,6
	mv	a3,sp
	li	a2,63
	li	a1,8
	li	a0,0
	call	hub_print
	addi	a0,s2,1152
	call	process_and_wait
	lui	s0,%hi(hub_frame_size)
	lw	a2,%lo(hub_frame_size)(s0)
	li	a1,0
	li	a0,-268107776
	li	s1,249856
	call	memset
	addi	s1,s1,144
	lui	s5,%hi(reg_irq_counter)
	lui	s3,%hi(reg_sys_counter)
	lui	s6,%hi(reg_scratch)
	lui	s7,%hi(.LC20)
	lui	s8,%hi(.LC21)
	lui	s4,%hi(reg_config_write)
.L42:
	li	s2,-268435456
	lw	a5,4(s2)
	mv	a0,s1
	ori	a5,a5,1
	sw	a5,4(s2)
	call	process_and_wait
	lw	a5,4(s2)
	mv	a0,s1
	andi	a5,a5,-2
	sw	a5,4(s2)
	call	process_and_wait
 #APP
# 339 "src/main.c" 1
	csrc mstatus, 8
# 0 "" 2
 #NO_APP
	li	a5,-268091392
	lw	a2,0(a5)
	lw	a3,%lo(hub_frame_size)(s0)
	lw	a4,%lo(reg_irq_counter)(s5)
	lw	a5,%lo(reg_sys_counter)(s3)
	lw	a6,%lo(reg_scratch)(s6)
	andi	a2,a2,127
	li	a1,67
	addi	a0,s7,%lo(.LC20)
	call	printf
	li	a5,-268042240
	lw	a1,0(a5)
	lw	a2,4(a5)
	lw	a3,12(a5)
	lw	a4,8(a5)
	lw	a5,16(a5)
	addi	a0,s8,%lo(.LC21)
	call	printf
	call	mac_print_stats
 #APP
# 350 "src/main.c" 1
	csrs mstatus, 8
# 0 "" 2
 #NO_APP
	call	sram_test_write_shorts
	lw	a5,%lo(reg_sys_counter)(s3)
	addi	a5,a5,1
	sw	a5,%lo(reg_sys_counter)(s3)
	lw	a5,%lo(reg_config_write)(s4)
	beq	a5,zero,.L41
	lw	a5,%lo(reg_config_write)(s4)
	addi	a5,a5,-1
	sw	a5,%lo(reg_config_write)(s4)
.L41:
	li	a4,-268435456
	lw	a5,4(a4)
	andi	a5,a5,-3
	sw	a5,4(a4)
	j	.L42
.L40:
	addi	a1,s1,%lo(default_config)
	li	a2,32
	addi	a0,s0,%lo(active_config)
	call	memcpy
	lui	a1,%hi(.LC13)
	addi	a1,a1,%lo(.LC13)
	j	.L50
.L39:
	lui	a1,%hi(.LC14)
	addi	a1,a1,%lo(.LC14)
	j	.L50
	.size	main, .-main
	.text
	.align	2
	.globl	timerInterrupt
	.type	timerInterrupt, @function
timerInterrupt:
	ret
	.size	timerInterrupt, .-timerInterrupt
	.align	2
	.globl	externalInterrupt
	.type	externalInterrupt, @function
externalInterrupt:
	addi	sp,sp,-16
	sw	ra,12(sp)
	sw	s0,8(sp)
	li	a5,-268042240
	lw	a5,4(a5)
	andi	a5,a5,1
	beq	a5,zero,.L53
	li	a4,-268435456
	lw	a5,4(a4)
	li	a1,42
	lui	a2,%hi(uart_config_reset_counter)
	ori	a5,a5,2
	sw	a5,4(a4)
	li	a4,-268369920
.L54:
	lw	a5,4(a4)
	srli	a5,a5,24
	bne	a5,zero,.L58
	li	a4,-268042240
	lw	a5,4(a4)
	andi	a5,a5,-2
	sw	a5,4(a4)
.L53:
	li	s0,-268042240
	lw	a5,4(s0)
	andi	a5,a5,2
	beq	a5,zero,.L59
	call	modbus_rtu_isr
	lw	a5,4(s0)
	andi	a5,a5,-3
	sw	a5,4(s0)
.L59:
	li	s0,-268042240
	lw	a5,4(s0)
	andi	a5,a5,4
	beq	a5,zero,.L60
	call	mac_rx_isr
	lw	a5,4(s0)
	andi	a5,a5,-5
	sw	a5,4(s0)
.L60:
	li	a5,-268042240
	lw	a4,4(a5)
	andi	a4,a4,8
	beq	a4,zero,.L61
	li	a4,-268304384
	li	a3,98304
	sw	zero,12(a4)
	addi	a3,a3,1696
	sw	a3,16(a4)
	li	a3,1
	sw	a3,0(a4)
	lui	a4,%hi(events_mac_poll)
	sw	a3,%lo(events_mac_poll)(a4)
	lw	a4,4(a5)
	andi	a4,a4,-9
	sw	a4,4(a5)
.L61:
	li	a5,-268042240
	lw	a4,4(a5)
	andi	a4,a4,16
	beq	a4,zero,.L62
	li	a4,-268300288
	li	a3,49152
	sw	zero,12(a4)
	addi	a3,a3,848
	sw	a3,16(a4)
	li	a3,1
	sw	a3,0(a4)
	lui	a4,%hi(events_modbus_rtu_poll)
	sw	a3,%lo(events_modbus_rtu_poll)(a4)
	lw	a4,4(a5)
	andi	a4,a4,-17
	sw	a4,4(a5)
.L62:
	li	a5,-268042240
	lw	a4,4(a5)
	andi	a4,a4,32
	beq	a4,zero,.L52
	lw	a4,4(a5)
	andi	a4,a4,-33
	sw	a4,4(a5)
.L52:
	lw	ra,12(sp)
	lw	s0,8(sp)
	addi	sp,sp,16
	jr	ra
.L58:
	lw	a5,0(a4)
	andi	a0,a5,0xff
	andi	a3,a5,255
.L55:
	lw	a5,4(a4)
	srli	a5,a5,16
	andi	a5,a5,255
	beq	a5,zero,.L55
	sw	a3,0(a4)
	bne	a0,a1,.L56
	lw	a5,%lo(uart_config_reset_counter)(a2)
	addi	a5,a5,1
	sw	a5,%lo(uart_config_reset_counter)(a2)
	j	.L54
.L56:
	sw	zero,%lo(uart_config_reset_counter)(a2)
	j	.L54
	.size	externalInterrupt, .-externalInterrupt
	.align	2
	.globl	crash
	.type	crash, @function
crash:
	addi	sp,sp,-16
	sw	s0,8(sp)
	lui	s0,%hi(.LANCHOR0)
	mv	a1,a0
	addi	a0,s0,%lo(.LANCHOR0)
	sw	ra,12(sp)
	call	to_hex
	lui	a0,%hi(.LC22)
	addi	a0,a0,%lo(.LC22)
	call	print_uart0
	addi	a0,s0,%lo(.LANCHOR0)
	call	print_uart0
	lw	s0,8(sp)
	lw	ra,12(sp)
	lui	a0,%hi(.LC0)
	addi	a0,a0,%lo(.LC0)
	addi	sp,sp,16
	tail	print_uart0
	.size	crash, .-crash
	.align	2
	.globl	irqCallback
	.type	irqCallback, @function
irqCallback:
	lui	a4,%hi(reg_irq_counter)
	lw	a5,%lo(reg_irq_counter)(a4)
	addi	a5,a5,1
	sw	a5,%lo(reg_irq_counter)(a4)
 #APP
# 442 "src/main.c" 1
	csrr a5, mcause
# 0 "" 2
 #NO_APP
	bge	a5,zero,.L88
	andi	a5,a5,15
	li	a4,7
	beq	a5,a4,.L87
	li	a4,11
	bne	a5,a4,.L90
	tail	externalInterrupt
.L90:
	li	a0,2
.L91:
	tail	crash
.L88:
	li	a0,1
	j	.L91
.L87:
	ret
	.size	irqCallback, .-irqCallback
	.globl	t2
	.globl	t1
	.globl	deadbeef
	.globl	events_modbus_rtu_poll
	.globl	events_mac_poll
	.globl	uart_config_reset_counter
	.globl	reg_config_write
	.globl	reg_scratch
	.globl	reg_sys_counter
	.globl	reg_irq_counter
	.bss
	.align	2
	.set	.LANCHOR0,. + 0
	.type	crash_str, @object
	.size	crash_str, 16
crash_str:
	.zero	16
	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	2
.LC0:
	.string	"\r\n"
	.zero	1
.LC1:
	.string	"Filling mem at: %p, size: %d bytes... "
	.zero	1
.LC2:
	.string	"Done!\r\n"
.LC3:
	.string	"Checking mem at: %p, size: %d bytes... "
.LC4:
	.string	"\r\nMem check failed at: %p, expected: %p, got: %p\r\n"
	.zero	1
.LC5:
	.string	"Soft-start, performing hard reset!\r\n"
	.zero	3
.LC6:
	.string	"Sbrk heap_end: "
.LC7:
	.string	"\r\nHUB-12/HUB-75 driver for Karnix ASB-254. Build %05d at date/time: Dec 15 2023 14:00:08\r\nCopyright (C) 2021-2023 Fabmicro, LLC., Tyumen, Russia.\r\n\r\n"
	.zero	2
.LC8:
	.string	"Hardware init...\r\n"
	.zero	1
.LC9:
	.string	"user request"
	.zero	3
.LC10:
	.string	"Factory defaults loaded by %s!\r\n"
	.zero	3
.LC11:
	.string	"CONFIG pin"
	.zero	1
.LC12:
	.string	"Config loaded from EEPROM\r\n"
.LC13:
	.string	"EEPROM CRC ERROR"
	.zero	3
.LC14:
	.string	"EEPROM malfunction"
	.zero	1
.LC15:
	.string	"Hardware init done\r\n"
	.zero	3
.LC16:
	.string	"MBus:"
	.zero	2
.LC17:
	.string	"%d "
.LC18:
	.string	"IP4:"
	.zero	3
.LC19:
	.string	"%d  "
	.zero	3
.LC20:
	.string	"HUB12/75 adapter (build: %05d): mode = HUB%d, frame_size = %d, irq_counter = %d, sys_counter = %d, scratch = %p\r\n"
	.zero	2
.LC21:
	.string	"PLIC: ENABLE = %p, PENDING = %p, POLARITY = %p, IRQLINE = %p, IRQLAST = %p\r\n"
	.zero	3
.LC22:
	.string	"\r\n*** TRAP: "
	.section	.sbss,"aw",@nobits
	.align	3
	.type	t2, @object
	.size	t2, 8
t2:
	.zero	8
	.type	t1, @object
	.size	t1, 8
t1:
	.zero	8
	.type	deadbeef, @object
	.size	deadbeef, 4
deadbeef:
	.zero	4
	.type	events_modbus_rtu_poll, @object
	.size	events_modbus_rtu_poll, 4
events_modbus_rtu_poll:
	.zero	4
	.type	events_mac_poll, @object
	.size	events_mac_poll, 4
events_mac_poll:
	.zero	4
	.type	uart_config_reset_counter, @object
	.size	uart_config_reset_counter, 4
uart_config_reset_counter:
	.zero	4
	.type	reg_config_write, @object
	.size	reg_config_write, 4
reg_config_write:
	.zero	4
	.type	reg_scratch, @object
	.size	reg_scratch, 4
reg_scratch:
	.zero	4
	.type	reg_sys_counter, @object
	.size	reg_sys_counter, 4
reg_sys_counter:
	.zero	4
	.type	reg_irq_counter, @object
	.size	reg_irq_counter, 4
reg_irq_counter:
	.zero	4
	.ident	"GCC: (SiFive GCC 8.3.0-2019.08.0) 8.3.0"
