	.file	"main.c"
	.option nopic
	.attribute arch, "rv32i2p0"
	.attribute unaligned_access, 0
	.attribute stack_align, 16
	.text
 #APP
	.set regnum_x0  ,  0
	.set regnum_x1  ,  1
	.set regnum_x2  ,  2
	.set regnum_x3  ,  3
	.set regnum_x4  ,  4
	.set regnum_x5  ,  5
	.set regnum_x6  ,  6
	.set regnum_x7  ,  7
	.set regnum_x8  ,  8
	.set regnum_x9  ,  9
	.set regnum_x10 , 10
	.set regnum_x11 , 11
	.set regnum_x12 , 12
	.set regnum_x13 , 13
	.set regnum_x14 , 14
	.set regnum_x15 , 15
	.set regnum_x16 , 16
	.set regnum_x17 , 17
	.set regnum_x18 , 18
	.set regnum_x19 , 19
	.set regnum_x20 , 20
	.set regnum_x21 , 21
	.set regnum_x22 , 22
	.set regnum_x23 , 23
	.set regnum_x24 , 24
	.set regnum_x25 , 25
	.set regnum_x26 , 26
	.set regnum_x27 , 27
	.set regnum_x28 , 28
	.set regnum_x29 , 29
	.set regnum_x30 , 30
	.set regnum_x31 , 31
	.set regnum_zero,  0
	.set regnum_ra  ,  1
	.set regnum_sp  ,  2
	.set regnum_gp  ,  3
	.set regnum_tp  ,  4
	.set regnum_t0  ,  5
	.set regnum_t1  ,  6
	.set regnum_t2  ,  7
	.set regnum_s0  ,  8
	.set regnum_s1  ,  9
	.set regnum_a0  , 10
	.set regnum_a1  , 11
	.set regnum_a2  , 12
	.set regnum_a3  , 13
	.set regnum_a4  , 14
	.set regnum_a5  , 15
	.set regnum_a6  , 16
	.set regnum_a7  , 17
	.set regnum_s2  , 18
	.set regnum_s3  , 19
	.set regnum_s4  , 20
	.set regnum_s5  , 21
	.set regnum_s6  , 22
	.set regnum_s7  , 23
	.set regnum_s8  , 24
	.set regnum_s9  , 25
	.set regnum_s10 , 26
	.set regnum_s11 , 27
	.set regnum_t3  , 28
	.set regnum_t4  , 29
	.set regnum_t5  , 30
	.set regnum_t6  , 31
	.set CUSTOM0  , 0x0B
	.set CUSTOM1  , 0x2B
 #NO_APP
	.align	2
	.globl	println
	.type	println, @function
println:
	addi	sp,sp,-16
	sw	ra,12(sp)
	call	print_uart0
	lw	ra,12(sp)
	lui	a0,%hi(.LC0)
	addi	a0,a0,%lo(.LC0)
	addi	sp,sp,16
	tail	print_uart0
	.size	println, .-println
	.align	2
	.globl	to_hex_nibble
	.type	to_hex_nibble, @function
to_hex_nibble:
	andi	a0,a0,15
	li	a5,9
	bleu	a0,a5,.L4
	addi	a0,a0,55
	ret
.L4:
	addi	a0,a0,48
	ret
	.size	to_hex_nibble, .-to_hex_nibble
	.align	2
	.globl	to_hex
	.type	to_hex, @function
to_hex:
	addi	sp,sp,-48
	sw	s0,40(sp)
	sw	s1,36(sp)
	sw	s2,32(sp)
	sw	s3,28(sp)
	sw	ra,44(sp)
	mv	s2,a0
	mv	s1,a0
	li	s0,28
	li	s3,-4
.L7:
	srl	a0,a1,s0
	andi	a0,a0,0xff
	sw	a1,12(sp)
	call	to_hex_nibble
	sb	a0,0(s1)
	addi	s0,s0,-4
	addi	s1,s1,1
	lw	a1,12(sp)
	bne	s0,s3,.L7
	lw	ra,44(sp)
	lw	s0,40(sp)
	sb	zero,8(s2)
	lw	s1,36(sp)
	lw	s2,32(sp)
	lw	s3,28(sp)
	addi	sp,sp,48
	jr	ra
	.size	to_hex, .-to_hex
	.align	2
	.globl	process_and_wait
	.type	process_and_wait, @function
process_and_wait:
	addi	sp,sp,-48
	sw	s0,40(sp)
	sw	s1,36(sp)
	sw	s4,24(sp)
	sw	s5,20(sp)
	sw	s6,16(sp)
	sw	s7,12(sp)
	sw	ra,44(sp)
	sw	s2,32(sp)
	sw	s3,28(sp)
	li	a5,-267714560
	lw	s2,0(a5)
	lw	s3,4(a5)
	mv	s5,a0
	li	s6,-267714560
	lui	s0,%hi(events_modbus_rtu_poll)
	lui	s7,%hi(events_modbus_rtu_rx)
	lui	s4,%hi(events_mac_poll)
	lui	s1,%hi(events_mac_rx)
.L16:
	lw	a5,0(s6)
	lw	a6,4(s6)
	sub	a3,a5,s2
	sgtu	a4,a3,a5
	sub	a5,a6,s3
	bne	a5,a4,.L10
	bleu	s5,a3,.L10
	lw	a5,%lo(events_modbus_rtu_poll)(s0)
	beq	a5,zero,.L13
	call	modbus_rtu_poll
	sw	zero,%lo(events_modbus_rtu_poll)(s0)
.L13:
	lw	a5,%lo(events_modbus_rtu_rx)(s7)
	beq	a5,zero,.L14
	call	modbus_rtu_rx
	sw	zero,%lo(events_modbus_rtu_poll)(s0)
.L14:
	lw	a5,%lo(events_mac_poll)(s4)
	beq	a5,zero,.L15
	call	mac_poll
	sw	zero,%lo(events_mac_poll)(s4)
.L15:
	lw	a5,%lo(events_mac_rx)(s1)
	beq	a5,zero,.L16
	call	mac_rx
	sw	zero,%lo(events_mac_rx)(s1)
	j	.L16
.L10:
	lw	ra,44(sp)
	lw	s0,40(sp)
	lw	s1,36(sp)
	lw	s2,32(sp)
	lw	s3,28(sp)
	lw	s4,24(sp)
	lw	s5,20(sp)
	lw	s6,16(sp)
	lw	s7,12(sp)
	addi	sp,sp,48
	jr	ra
	.size	process_and_wait, .-process_and_wait
	.align	2
	.globl	sram_test_write_random_ints
	.type	sram_test_write_random_ints, @function
sram_test_write_random_ints:
	lui	a0,%hi(.LC1)
	addi	sp,sp,-32
	li	a2,524288
	li	a1,-1879048192
	addi	a0,a0,%lo(.LC1)
	sw	ra,28(sp)
	sw	s0,24(sp)
	sw	s1,20(sp)
	sw	s2,16(sp)
	sw	s3,12(sp)
	sw	s4,8(sp)
	call	printf
	li	a5,-559038464
	addi	a5,a5,-273
	li	a4,-1879048192
	li	a3,-1878523904
.L32:
	sw	a5,0(a4)
	addi	a4,a4,4
	slli	a5,a5,1
	bne	a4,a3,.L32
	lui	a0,%hi(.LC2)
	li	a2,524288
	li	a1,-1879048192
	addi	a0,a0,%lo(.LC2)
	li	s1,-559038464
	call	printf
	li	s2,0
	addi	s1,s1,-273
	li	s0,-1879048192
	lui	s4,%hi(.LC3)
	li	s3,-1878523904
.L34:
	lw	a5,0(s0)
	beq	a5,s1,.L33
	lw	a3,0(s0)
	mv	a2,s1
	mv	a1,s0
	addi	a0,s4,%lo(.LC3)
	call	printf
	addi	s2,s2,1
.L33:
	addi	s0,s0,4
	slli	s1,s1,1
	bne	s0,s3,.L34
	lui	a0,%hi(.LC4)
	mv	a1,s2
	addi	a0,a0,%lo(.LC4)
	call	printf
	lw	ra,28(sp)
	lw	s0,24(sp)
	mv	a0,s2
	lw	s1,20(sp)
	lw	s2,16(sp)
	lw	s3,12(sp)
	lw	s4,8(sp)
	addi	sp,sp,32
	jr	ra
	.size	sram_test_write_random_ints, .-sram_test_write_random_ints
	.section	.text.startup,"ax",@progbits
	.align	2
	.globl	main
	.type	main, @function
main:
	addi	sp,sp,-96
	sw	ra,92(sp)
	sw	s0,88(sp)
	sw	s1,84(sp)
	sw	s2,80(sp)
	sw	s3,76(sp)
	sw	s4,72(sp)
	sw	s5,68(sp)
	sw	s6,64(sp)
	sw	s7,60(sp)
	sw	s8,56(sp)
 #APP
# 218 "src/main.c" 1
	csrc mstatus, 8
# 0 "" 2
 #NO_APP
	li	a1,0
	li	a0,0
	call	init_sbrk
	li	a0,1998848
	addi	a0,a0,1152
	call	delay_us
	lui	a4,%hi(deadbeef)
	lw	a5,%lo(deadbeef)(a4)
	beq	a5,zero,.L39
	lui	a0,%hi(.LC5)
	addi	a0,a0,%lo(.LC5)
	call	print_uart0
	call	hard_reboot
.L40:
	lui	a0,%hi(.LC6)
	li	a1,327
	addi	a0,a0,%lo(.LC6)
	call	printf
	li	a4,-268435456
	lw	a5,4(a4)
	lui	a0,%hi(.LC7)
	addi	a0,a0,%lo(.LC7)
	ori	a5,a5,2
	sw	a5,4(a4)
	call	printf
	call	sram_test_write_random_ints
	lui	s0,%hi(.LC10)
	bne	a0,zero,.L41
	lui	a0,%hi(.LC8)
	addi	a0,a0,%lo(.LC8)
	call	printf
	li	a1,524288
	li	a0,-1879048192
	call	init_sbrk
	lui	a1,%hi(.LC9)
	addi	a1,a1,%lo(.LC9)
.L59:
	addi	a0,s0,%lo(.LC10)
	call	printf
	li	a5,-268091392
	sw	zero,0(a5)
	li	a4,-268435456
	lw	a5,4(a4)
	li	a2,58
	li	a3,1
	andi	a5,a5,-9
	sw	a5,4(a4)
	li	a5,-268042240
	li	a4,127
	sw	a4,12(a5)
	sw	zero,4(a5)
	li	a4,-1
	sw	a4,0(a5)
	li	a4,-268369920
	lw	a5,4(a4)
	li	a0,-267845632
	ori	a5,a5,2
	sw	a5,4(a4)
	li	a4,-268365824
	lw	a5,4(a4)
	ori	a5,a5,2
	sw	a5,4(a4)
	li	a5,-268304384
	sw	zero,0(a5)
	sw	a2,4(a5)
	sw	zero,8(a5)
	li	a4,98304
	sw	zero,12(a5)
	addi	a4,a4,1696
	sw	a4,16(a5)
	sw	a3,0(a5)
	li	a5,-268300288
	sw	zero,0(a5)
	sw	a2,4(a5)
	sw	zero,8(a5)
	li	a4,49152
	sw	zero,12(a5)
	addi	a4,a4,848
	sw	a4,16(a5)
	sw	a3,0(a5)
	call	i2c_init
 #APP
# 317 "src/main.c" 1
	csrs mstatus, 8
# 0 "" 2
 #NO_APP
	lui	s0,%hi(_impure_ptr)
	lw	a5,%lo(_impure_ptr)(s0)
	lui	s4,%hi(uart_config_reset_counter)
	li	s2,499712
	lw	a0,8(a5)
	li	s1,10
	li	s5,2
	call	fpurge
	lui	a0,%hi(.LC12)
	addi	a0,a0,%lo(.LC12)
	call	printf
	lw	a5,%lo(_impure_ptr)(s0)
	mv	s3,s4
	li	s6,-268435456
	lw	a0,8(a5)
	addi	s2,s2,288
	call	fflush
.L44:
	lw	a5,%lo(uart_config_reset_counter)(s4)
	bgtu	a5,s5,.L43
	lw	a5,0(s6)
	bge	a5,zero,.L43
	li	a0,46
	call	putchar
	lw	a5,%lo(_impure_ptr)(s0)
	addi	s1,s1,-1
	lw	a0,8(a5)
	call	fflush
	mv	a0,s2
	call	delay_us
	bne	s1,zero,.L44
.L43:
	lui	a0,%hi(.LC0)
	addi	a0,a0,%lo(.LC0)
	call	printf
	lui	s0,%hi(active_config)
	lui	s1,%hi(default_config)
	li	a2,32
	addi	a1,s1,%lo(default_config)
	addi	a0,s0,%lo(active_config)
	call	memcpy
	lw	a4,%lo(uart_config_reset_counter)(s3)
	li	a5,2
	bleu	a4,a5,.L45
	lui	a1,%hi(.LC13)
	sw	zero,%lo(uart_config_reset_counter)(s3)
	addi	a1,a1,%lo(.LC13)
.L60:
	lui	a0,%hi(.LC14)
	addi	a0,a0,%lo(.LC14)
	call	printf
	j	.L46
.L39:
	li	a5,-559038464
	addi	a5,a5,-273
	sw	a5,%lo(deadbeef)(a4)
	j	.L40
.L41:
	lui	a1,%hi(.LC11)
	addi	a1,a1,%lo(.LC11)
	j	.L59
.L45:
	li	a5,-268435456
	lw	a5,0(a5)
	blt	a5,zero,.L47
	lui	a1,%hi(.LC15)
	addi	a1,a1,%lo(.LC15)
	j	.L60
.L47:
	li	a0,-267845632
	call	eeprom_probe
	bne	a0,zero,.L48
	addi	a0,s0,%lo(active_config)
	call	config_load
	bne	a0,zero,.L49
	lui	a0,%hi(.LC16)
	addi	a0,a0,%lo(.LC16)
	call	printf
.L46:
 #APP
# 358 "src/main.c" 1
	csrc mstatus, 8
# 0 "" 2
 #NO_APP
	addi	s0,s0,%lo(active_config)
	lbu	a0,19(s0)
	call	hub_init
	call	mac_lwip_init
	call	modbus_udp_init
	call	modbus_rtu_init
	li	a1,16384
	addi	a1,a1,-384
	li	a0,-267649024
	call	audiodac_init
	lui	a0,%hi(.LC19)
	addi	a0,a0,%lo(.LC19)
	call	printf
	li	a4,-268435456
	lw	a5,4(a4)
	andi	a5,a5,-8
	sw	a5,4(a4)
 #APP
# 380 "src/main.c" 1
	csrs mstatus, 8
# 0 "" 2
 #NO_APP
	lui	a0,%hi(.LC20)
	addi	a0,a0,%lo(.LC20)
	call	printf
	lui	s1,%hi(font_6x8)
	lui	a3,%hi(.LC21)
	li	a7,8
	li	a6,6
	addi	a5,s1,%lo(font_6x8)
	li	a4,5
	addi	a3,a3,%lo(.LC21)
	li	a2,63
	li	a1,0
	li	a0,6
	call	hub_print
	lbu	a2,20(s0)
	lui	a1,%hi(.LC22)
	addi	a1,a1,%lo(.LC22)
	addi	a0,sp,16
	call	sprintf
	mv	a4,a0
	li	a7,8
	li	a6,6
	addi	a5,s1,%lo(font_6x8)
	addi	a3,sp,16
	li	a2,63
	li	a1,8
	li	a0,0
	call	hub_print
	li	s2,1998848
	addi	a0,s2,1152
	call	process_and_wait
	lui	a3,%hi(.LC23)
	li	a7,8
	li	a6,6
	addi	a5,s1,%lo(font_6x8)
	li	a4,5
	addi	a3,a3,%lo(.LC23)
	li	a2,63
	li	a1,0
	li	a0,6
	lui	s0,%hi(default_netif)
	call	hub_print
	addi	s0,s0,%lo(default_netif)
	lbu	a2,4(s0)
	lui	s3,%hi(.LC24)
	addi	a1,s3,%lo(.LC24)
	addi	a0,sp,16
	call	sprintf
	mv	a4,a0
	li	a7,8
	li	a6,6
	addi	a5,s1,%lo(font_6x8)
	addi	a3,sp,16
	li	a2,63
	li	a1,8
	li	a0,0
	call	hub_print
	addi	a0,s2,1152
	call	process_and_wait
	lbu	a2,5(s0)
	addi	a1,s3,%lo(.LC24)
	addi	a0,sp,16
	call	sprintf
	mv	a4,a0
	li	a7,8
	li	a6,6
	addi	a5,s1,%lo(font_6x8)
	addi	a3,sp,16
	li	a2,63
	li	a1,8
	li	a0,0
	call	hub_print
	addi	a0,s2,1152
	call	process_and_wait
	lbu	a2,6(s0)
	addi	a1,s3,%lo(.LC24)
	addi	a0,sp,16
	call	sprintf
	mv	a4,a0
	li	a7,8
	li	a6,6
	addi	a5,s1,%lo(font_6x8)
	addi	a3,sp,16
	li	a2,63
	li	a1,8
	li	a0,0
	call	hub_print
	addi	a0,s2,1152
	call	process_and_wait
	lbu	a2,7(s0)
	addi	a1,s3,%lo(.LC24)
	addi	a0,sp,16
	call	sprintf
	mv	a4,a0
	li	a7,8
	li	a6,6
	addi	a5,s1,%lo(font_6x8)
	addi	a3,sp,16
	li	a2,63
	li	a1,8
	li	a0,0
	call	hub_print
	addi	a0,s2,1152
	call	process_and_wait
	lui	s0,%hi(hub_frame_size)
	lw	a2,%lo(hub_frame_size)(s0)
	li	a1,0
	li	a0,-268107776
	call	memset
	li	a0,61440
	addi	a0,a0,-1440
	call	malloc
	beq	a0,zero,.L50
	li	a1,28672
	addi	a1,a1,1328
	call	audiodac0_start_playback
.L52:
	li	s1,499712
	addi	s1,s1,288
	lui	s4,%hi(reg_irq_counter)
	lui	s3,%hi(reg_sys_counter)
	lui	s5,%hi(reg_scratch)
	lui	s6,%hi(audiodac0_samples_sent)
	lui	s7,%hi(audiodac0_irqs)
	lui	s8,%hi(sbrk_heap_end)
.L51:
	li	s2,-268435456
	lw	a5,4(s2)
	mv	a0,s1
	ori	a5,a5,1
	sw	a5,4(s2)
	call	process_and_wait
	lw	a5,4(s2)
	mv	a0,s1
	andi	a5,a5,-2
	sw	a5,4(s2)
	call	process_and_wait
	li	a5,-268091392
	lw	a2,0(a5)
	lw	a4,%lo(reg_irq_counter)(s4)
	lw	a5,%lo(reg_sys_counter)(s3)
	lw	a6,%lo(reg_scratch)(s5)
	lw	a3,%lo(audiodac0_samples_sent)(s6)
	lw	a1,%lo(audiodac0_irqs)(s7)
	lw	a7,%lo(sbrk_heap_end)(s8)
	sw	a3,0(sp)
	lw	a3,%lo(hub_frame_size)(s0)
	lui	a0,%hi(.LC26)
	andi	a2,a2,127
	sw	a1,4(sp)
	addi	a0,a0,%lo(.LC26)
	li	a1,327
	call	printf
	call	plic_print_stats
	call	mac_print_stats
	lw	a5,%lo(reg_sys_counter)(s3)
	addi	a5,a5,1
	sw	a5,%lo(reg_sys_counter)(s3)
	lui	a5,%hi(reg_config_write)
	lw	a4,%lo(reg_config_write)(a5)
	beq	a4,zero,.L53
	lw	a4,%lo(reg_config_write)(a5)
	addi	a4,a4,-1
	sw	a4,%lo(reg_config_write)(a5)
.L53:
	li	a4,-268435456
	lw	a5,4(a4)
	andi	a5,a5,-3
	sw	a5,4(a4)
	j	.L51
.L49:
	addi	a1,s1,%lo(default_config)
	li	a2,32
	addi	a0,s0,%lo(active_config)
	call	memcpy
	lui	a1,%hi(.LC17)
	addi	a1,a1,%lo(.LC17)
	j	.L60
.L48:
	lui	a1,%hi(.LC18)
	addi	a1,a1,%lo(.LC18)
	j	.L60
.L50:
	lui	a0,%hi(.LC25)
	addi	a0,a0,%lo(.LC25)
	call	printf
	j	.L52
	.size	main, .-main
	.text
	.align	2
	.globl	timerInterrupt
	.type	timerInterrupt, @function
timerInterrupt:
	ret
	.size	timerInterrupt, .-timerInterrupt
	.align	2
	.globl	externalInterrupt
	.type	externalInterrupt, @function
externalInterrupt:
	addi	sp,sp,-16
	sw	ra,12(sp)
	sw	s0,8(sp)
	li	a5,-268042240
	lw	a5,4(a5)
	andi	a5,a5,1
	beq	a5,zero,.L63
	li	a4,-268435456
	lw	a5,4(a4)
	li	a1,42
	lui	a2,%hi(uart_config_reset_counter)
	ori	a5,a5,2
	sw	a5,4(a4)
	li	a4,-268369920
.L64:
	lw	a5,4(a4)
	srli	a5,a5,24
	bne	a5,zero,.L68
	li	a4,-268042240
	lw	a5,4(a4)
	andi	a5,a5,-2
	sw	a5,4(a4)
.L63:
	li	a5,-268042240
	lw	a4,4(a5)
	andi	a4,a4,2
	beq	a4,zero,.L69
	lui	a3,%hi(events_modbus_rtu_rx)
	lw	a4,%lo(events_modbus_rtu_rx)(a3)
	addi	a4,a4,1
	sw	a4,%lo(events_modbus_rtu_rx)(a3)
	lw	a4,4(a5)
	andi	a4,a4,-3
	sw	a4,4(a5)
.L69:
	li	a5,-268042240
	lw	a4,4(a5)
	andi	a4,a4,4
	beq	a4,zero,.L70
	lui	a3,%hi(events_mac_rx)
	lw	a4,%lo(events_mac_rx)(a3)
	addi	a4,a4,1
	sw	a4,%lo(events_mac_rx)(a3)
	lw	a4,4(a5)
	andi	a4,a4,-5
	sw	a4,4(a5)
.L70:
	li	a5,-268042240
	lw	a4,4(a5)
	andi	a4,a4,8
	beq	a4,zero,.L71
	li	a4,-268304384
	li	a3,98304
	sw	zero,12(a4)
	addi	a3,a3,1696
	sw	a3,16(a4)
	li	a3,1
	sw	a3,0(a4)
	lui	a3,%hi(events_mac_poll)
	lw	a4,%lo(events_mac_poll)(a3)
	addi	a4,a4,1
	sw	a4,%lo(events_mac_poll)(a3)
	lw	a4,4(a5)
	andi	a4,a4,-9
	sw	a4,4(a5)
.L71:
	li	a5,-268042240
	lw	a4,4(a5)
	andi	a4,a4,16
	beq	a4,zero,.L72
	li	a4,-268300288
	li	a3,49152
	sw	zero,12(a4)
	addi	a3,a3,848
	sw	a3,16(a4)
	li	a3,1
	sw	a3,0(a4)
	lui	a3,%hi(events_modbus_rtu_poll)
	lw	a4,%lo(events_modbus_rtu_poll)(a3)
	addi	a4,a4,1
	sw	a4,%lo(events_modbus_rtu_poll)(a3)
	lw	a4,4(a5)
	andi	a4,a4,-17
	sw	a4,4(a5)
.L72:
	li	a5,-268042240
	lw	a4,4(a5)
	andi	a4,a4,32
	beq	a4,zero,.L73
	lw	a4,4(a5)
	andi	a4,a4,-33
	sw	a4,4(a5)
.L73:
	li	s0,-268042240
	lw	a5,4(s0)
	andi	a5,a5,64
	beq	a5,zero,.L62
	lui	a4,%hi(audiodac0_irqs)
	lw	a5,%lo(audiodac0_irqs)(a4)
	addi	a5,a5,1
	sw	a5,%lo(audiodac0_irqs)(a4)
	call	audiodac0_isr
	lui	a4,%hi(audiodac0_samples_sent)
	lw	a5,%lo(audiodac0_samples_sent)(a4)
	add	a0,a0,a5
	sw	a0,%lo(audiodac0_samples_sent)(a4)
	lw	a5,4(s0)
	andi	a5,a5,-65
	sw	a5,4(s0)
.L62:
	lw	ra,12(sp)
	lw	s0,8(sp)
	addi	sp,sp,16
	jr	ra
.L68:
	lw	a5,0(a4)
	andi	a0,a5,0xff
	andi	a3,a5,255
.L65:
	lw	a5,4(a4)
	srli	a5,a5,16
	andi	a5,a5,255
	beq	a5,zero,.L65
	sw	a3,0(a4)
	bne	a0,a1,.L66
	lw	a5,%lo(uart_config_reset_counter)(a2)
	addi	a5,a5,1
	sw	a5,%lo(uart_config_reset_counter)(a2)
	j	.L64
.L66:
	sw	zero,%lo(uart_config_reset_counter)(a2)
	j	.L64
	.size	externalInterrupt, .-externalInterrupt
	.align	2
	.globl	crash
	.type	crash, @function
crash:
	addi	sp,sp,-16
	sw	s0,8(sp)
	lui	s0,%hi(.LANCHOR0)
	mv	a1,a0
	addi	a0,s0,%lo(.LANCHOR0)
	sw	ra,12(sp)
	call	to_hex
	lui	a0,%hi(.LC27)
	addi	a0,a0,%lo(.LC27)
	call	print_uart0
	addi	a0,s0,%lo(.LANCHOR0)
	call	print_uart0
	lw	s0,8(sp)
	lw	ra,12(sp)
	lui	a0,%hi(.LC0)
	addi	a0,a0,%lo(.LC0)
	addi	sp,sp,16
	tail	print_uart0
	.size	crash, .-crash
	.align	2
	.globl	irqCallback
	.type	irqCallback, @function
irqCallback:
	lui	a4,%hi(reg_irq_counter)
	lw	a5,%lo(reg_irq_counter)(a4)
	addi	a5,a5,1
	sw	a5,%lo(reg_irq_counter)(a4)
 #APP
# 569 "src/main.c" 1
	csrr a5, mcause
# 0 "" 2
 #NO_APP
	bge	a5,zero,.L102
	andi	a5,a5,15
	li	a4,7
	beq	a5,a4,.L101
	li	a4,11
	bne	a5,a4,.L104
	tail	externalInterrupt
.L104:
	li	a0,2
.L105:
	tail	crash
.L102:
	li	a0,1
	j	.L105
.L101:
	ret
	.size	irqCallback, .-irqCallback
	.globl	t2
	.globl	t1
	.globl	saw_table
	.globl	sine_table
	.globl	deadbeef
	.globl	audiodac0_samples_sent
	.globl	audiodac0_irqs
	.globl	events_modbus_rtu_rx
	.globl	events_modbus_rtu_poll
	.globl	events_mac_rx
	.globl	events_mac_poll
	.globl	uart_config_reset_counter
	.globl	reg_config_write
	.globl	reg_scratch
	.globl	reg_sys_counter
	.globl	reg_irq_counter
	.section	.rodata
	.align	2
	.type	saw_table, @object
	.size	saw_table, 80
saw_table:
	.half	-32768
	.half	-31130
	.half	-29492
	.half	-27854
	.half	-26216
	.half	-24578
	.half	-22940
	.half	-21302
	.half	-19664
	.half	-18026
	.half	-16388
	.half	-14750
	.half	-13112
	.half	-11474
	.half	-9836
	.half	-8189
	.half	-6560
	.half	-4922
	.half	-3284
	.half	-1646
	.half	-8
	.half	1630
	.half	3268
	.half	4906
	.half	6544
	.half	8182
	.half	9820
	.half	11458
	.half	13096
	.half	14734
	.half	16372
	.half	18010
	.half	19648
	.half	21286
	.half	22924
	.half	24562
	.half	25200
	.half	27838
	.half	29476
	.half	31114
	.type	sine_table, @object
	.size	sine_table, 160
sine_table:
	.half	0
	.half	5125
	.half	10125
	.half	14876
	.half	19260
	.half	23170
	.half	26509
	.half	29196
	.half	31163
	.half	32364
	.half	32767
	.half	32364
	.half	31163
	.half	29196
	.half	26509
	.half	23170
	.half	19260
	.half	14876
	.half	10125
	.half	5125
	.half	0
	.half	-5126
	.half	-10126
	.half	-14877
	.half	-19261
	.half	-23171
	.half	-26510
	.half	-29197
	.half	-31164
	.half	-32365
	.half	-32768
	.half	-32365
	.half	-31164
	.half	-29197
	.half	-26510
	.half	-23171
	.half	-19261
	.half	-14877
	.half	-10126
	.half	-5126
	.half	0
	.half	5125
	.half	10125
	.half	14876
	.half	19260
	.half	23170
	.half	26509
	.half	29196
	.half	31163
	.half	32364
	.half	32767
	.half	32364
	.half	31163
	.half	29196
	.half	26509
	.half	23170
	.half	19260
	.half	14876
	.half	10125
	.half	5125
	.half	0
	.half	-5126
	.half	-10126
	.half	-14877
	.half	-19261
	.half	-23171
	.half	-26510
	.half	-29197
	.half	-31164
	.half	-32365
	.half	-32768
	.half	-32365
	.half	-31164
	.half	-29197
	.half	-26510
	.half	-23171
	.half	-19261
	.half	-14877
	.half	-10126
	.half	-5126
	.bss
	.align	2
	.set	.LANCHOR0,. + 0
	.type	crash_str, @object
	.size	crash_str, 16
crash_str:
	.zero	16
	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	2
.LC0:
	.string	"\r\n"
	.zero	1
.LC1:
	.string	"Filling SRAM at: %p, size: %d bytes...\r\n"
	.zero	3
.LC2:
	.string	"Checking SRAM at: %p, size: %d bytes...\r\n"
	.zero	2
.LC3:
	.string	"SRAM check failed at: %p, expected: %p, got: %p\r\n"
	.zero	2
.LC4:
	.string	"SRAM Fails: %d\r\n"
	.zero	3
.LC5:
	.string	"Soft-start, performing hard reset!\r\n"
	.zero	3
.LC6:
	.string	"\r\nHUB-12/HUB-75 driver for Karnix ASB-254. Build %05d, date/time: Feb  1 2024 22:20:23\r\nCopyright (C) 2021-2023 Fabmicro, LLC., Tyumen, Russia.\r\n\r\n"
.LC7:
	.string	"Hardware init\r\n"
.LC8:
	.string	"Enabling SRAM...\r\n"
	.zero	1
.LC9:
	.string	"enabled"
.LC10:
	.string	"SRAM %s!\r\n"
	.zero	1
.LC11:
	.string	"disabled"
	.zero	3
.LC12:
	.string	"Press '*' to reset config"
	.zero	2
.LC13:
	.string	"user request"
	.zero	3
.LC14:
	.string	"Defaults loaded by %s!\r\n"
	.zero	3
.LC15:
	.string	"CONFIG pin"
	.zero	1
.LC16:
	.string	"Config loaded from EEPROM\r\n"
.LC17:
	.string	"EEPROM CRC ERROR"
	.zero	3
.LC18:
	.string	"EEPROM malfunction"
	.zero	1
.LC19:
	.string	"Hardware init done\r\n"
	.zero	3
.LC20:
	.string	"Displaying network settings...\r\n"
	.zero	3
.LC21:
	.string	"MBus:"
	.zero	2
.LC22:
	.string	"%d "
.LC23:
	.string	"IP4:"
	.zero	3
.LC24:
	.string	"%d  "
	.zero	3
.LC25:
	.string	"Failed to allocate ring_buffer!\r\n"
	.zero	2
.LC26:
	.string	"HUB12/75 adapter build %05d: mode = HUB%d, hub_fb_size = %d, irqs = %d, sys_cnt = %d, scratch = %p, sbrk_heap_end = %p, audiodac0_samples_sent = %d, audiodac0_irqs = %d\r\n"
	.zero	1
.LC27:
	.string	"\r\n*** TRAP: "
	.section	.sbss,"aw",@nobits
	.align	3
	.type	t2, @object
	.size	t2, 8
t2:
	.zero	8
	.type	t1, @object
	.size	t1, 8
t1:
	.zero	8
	.type	deadbeef, @object
	.size	deadbeef, 4
deadbeef:
	.zero	4
	.type	audiodac0_samples_sent, @object
	.size	audiodac0_samples_sent, 4
audiodac0_samples_sent:
	.zero	4
	.type	audiodac0_irqs, @object
	.size	audiodac0_irqs, 4
audiodac0_irqs:
	.zero	4
	.type	events_modbus_rtu_rx, @object
	.size	events_modbus_rtu_rx, 4
events_modbus_rtu_rx:
	.zero	4
	.type	events_modbus_rtu_poll, @object
	.size	events_modbus_rtu_poll, 4
events_modbus_rtu_poll:
	.zero	4
	.type	events_mac_rx, @object
	.size	events_mac_rx, 4
events_mac_rx:
	.zero	4
	.type	events_mac_poll, @object
	.size	events_mac_poll, 4
events_mac_poll:
	.zero	4
	.type	uart_config_reset_counter, @object
	.size	uart_config_reset_counter, 4
uart_config_reset_counter:
	.zero	4
	.type	reg_config_write, @object
	.size	reg_config_write, 4
reg_config_write:
	.zero	4
	.type	reg_scratch, @object
	.size	reg_scratch, 4
reg_scratch:
	.zero	4
	.type	reg_sys_counter, @object
	.size	reg_sys_counter, 4
reg_sys_counter:
	.zero	4
	.type	reg_irq_counter, @object
	.size	reg_irq_counter, 4
reg_irq_counter:
	.zero	4
	.ident	"GCC: (SiFive GCC 8.3.0-2019.08.0) 8.3.0"
